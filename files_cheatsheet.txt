FILE INPUTS AND OUTPUTS CHEATSHEET

--------------------------------------------------------------

SCRIPT: EDA.py

Exploratory Data Analysis of Kaggle's Predict Future Sales Dataset.
This script produces a PDF file with different types of plots of data.

    FILES IN: 
        "sales_train.csv"
        "items.csv"
        "item_categories.csv"
        "shops.csv"


    FILES OUT: 
        'EDA.pdf'

-----------------------------------------------------------------------------------------------------------------------------------------------

SCRIPT: preprocessing.py


Preprocesses data for the Future Sales Predictions

	FILES IN: 
		"sales_train.csv",
		"items.csv",
		"item_categories.csv",
		"test.csv",
		"shops.csv"

	FILES OUT: 
		'items_preprocessed.pickle',
		'shops_preprocessed.pickle',
		'categories_preprocessed.pickle',
		'sales_train_preprocessed.pickle',
		'test_preprocessed.pickle'


#############################
#    DETAILS ABOUT OUTPUTS  #
#############################

SALES TRAINSET 'sales_train_preprocessed.pickle',
Int64Index: 2916896 entries, 0 to 2935844
Data columns (total 6 columns):
 #   Column          Dtype  
---  ------          -----  
 0   date            object 
 1   date_block_num  int64  
 2   shop_id         int64  
 3   item_id         int64  
 4   item_price      float64
 5   item_cnt_day    float64


ITEMS 'items_preprocessed.pickle',
Int64Index: 22166 entries, 0 to 22169
Data columns (total 3 columns):
 #   Column            Non-Null Count  Dtype 
---  ------            --------------  ----- 
 0   item_name         22166 non-null  object
 1   item_id           22166 non-null  int64 
 2   item_category_id  22166 non-null  int64 


SHOPS 		'shops_preprocessed.pickle',
Int64Index: 53 entries, 2 to 59
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype 
---  ------     --------------  ----- 
 0   shop_id    53 non-null     int64 
 1   shop_name  53 non-null     object


CATEGORIES 		'categories_preprocessed.pickle', 
Int64Index: 80 entries, 0 to 83
Data columns (total 2 columns):
 #   Column              Non-Null Count  Dtype 
---  ------              --------------  ----- 
 0   item_category_id    80 non-null     int64 
 1   item_category_name  80 non-null     object


TEST		'test_preprocessed.pickle'
RangeIndex: 214200 entries, 0 to 214199
Data columns (total 3 columns):
 #   Column   Non-Null Count   Dtype
---  ------   --------------   -----
 0   ID       214200 non-null  int64
 1   shop_id  214200 non-null  int64
 2   item_id  214200 non-null  int64
-----------------------------------------------------------------------------------------------------------------------------------------------

SCRIPT: nlp.py

NLP data for the Future Sales Predictions

	FILES IN: 
		"items_translated.csv",
		"item_categories.csv",
		"shops.csv"

	FILES OUT: 
		'tenNN_items.pickle'
		'items_nlp.pickle'
		'items_clusters.pickle'
		'shops_nlp.pickle'
		'threeNN_shops.pickle'

-----------------------------------------------------------------------------------------------------------------------------------------------

SCRIPT: feature_eng_0.py

Feature Engineering Part 0 Basics - very basic adds additional categoriacal features
Examples: "shop_category_id", "shop_location_id","item_broader_category_name_id",
		  "item_name_p2", item_name_p3"

	FILES IN: 
		'items_preprocessed.pickle'
		'shops_preprocessed.pickle',
		'categories_preprocessed.pickle'

	FILES OUT: 
		'shops_feature_eng_0.pickle',
		'categories_feature_eng_0.pickle',
		'items_feature_eng_0.pickle'



#############################
#    DETAILS ABOUT OUTPUTS  #
#############################

CATEGORIES - 		'categories_feature_eng_0.pickle',
Int64Index: 80 entries, 0 to 83
Data columns (total 3 columns):
 #   Column                    Non-Null Count  Dtype
---  ------                    --------------  -----
 0   item_category_id          80 non-null     int64
 1   item_broader_category_id  80 non-null     int64
 2   item_general_category_id  80 non-null     int64

ITEMS 'items_feature_eng_0.pickle'
Int64Index: 22166 entries, 0 to 22169
Data columns (total 4 columns):
 #   Column            Non-Null Count  Dtype
---  ------            --------------  -----
 0   item_id           22166 non-null  int64
 1   item_category_id  22166 non-null  int64
 2   item_name_p2_id   22166 non-null  int64
 3   item_name_p3_id   22166 non-null  int64

SHOPS  shops_feature_eng_0.pickle',
Int64Index: 53 entries, 2 to 59
Data columns (total 3 columns):
 #   Column            Non-Null Count  Dtype
---  ------            --------------  -----
 0   shop_id           53 non-null     int64
 1   shop_category_id  53 non-null     int64
 2   shop_location_id  53 non-null     int64


-----------------------------------------------------------------------------------------------------------------------------------------------
SCRIPT: feature_eng_1.py

!! IMPORTANT STEP!! Puts the training data in expanded dataframe
For each time block we identify all items that were sold in that month,
every shop that register a sale in that time block,
and create a row for every combination of item and shop.
This script adds 34 time_block to test and train data as well as
calculates monthly sales for each item, store, timeblock. The feature is used later
to create many of hte lag features.
Example:
If in Jan2013 item1 was sold in shopA,
              item2 was sold in shopB,
              item1 was sold in shopC
Then we get:

jan2013 item1 shopA
jan2013 item1 shopB
jan2013 item1 shopC
jan2013 item2 shopA
jan2013 item2 shopB
jan2013 item2 shopC

Cartesian product of the exisitng options in a given month.

	FILES IN: 
		'items_preprocessed.pickle'
		'categories_preprocessed.pickle'
		'shops_preprocessed.pickle'
		'sales_train_preprocessed.pickle'
		'test_preprocessed.pickle'

	FILES OUT: 
		'main_data_feature_eng_1.pickle'
		'test_data_feature_eng_1.pickle'



#############################
#    DETAILS ABOUT OUTPUTS  #
#############################

MAIN TRAINING DATA 'main_data_feature_eng_1.pickle'
Int64Index: 10925650 entries, 0 to 10925649
Data columns (total 5 columns):
 #   Column            Dtype  
---  ------            -----  
 0   date_block_num    int16  
 1   shop_id           int64  
 2   item_id           int64  
 3   item_cnt_month    float16
 4   item_category_id  float64



TEST DATA 'test_data_feature_eng_1.pickle'
RangeIndex: 214200 entries, 0 to 214199
Data columns (total 4 columns):
 #   Column          Non-Null Count   Dtype
---  ------          --------------   -----
 0   ID              214200 non-null  int64
 1   shop_id         214200 non-null  int64
 2   item_id         214200 non-null  int64
 3   date_block_num  214200 non-null  int8 

-----------------------------------------------------------------------------------------------------------------------------------------------

SCRIPT: feature_eng_2.py

Creates 5 basic lag features for the data:
LAG ON ITEM COUNT                     "item_cnt_month"
LAG ON ITEMS AVERAGE COUNT            "date_avg_item_cnt"	
LAG ON Specific ITEM AVERAGE COUNT    "date_item_avg_item_cnt"
LAG on sales of any items per SHOP    "date_shop_avg_item_cnt"
LAG on sales of SPEC items per SHOP   "date_shop_item_avg_item_cnt"

	
	FILES IN: 
		'main_data_feature_eng_1.pickle'

	FILES OUT: 
		'main_data_feature_eng_2.pickle'


#############################
#    DETAILS ABOUT OUTPUTS  #
#############################

Int64Index: 10925650 entries, 0 to 10925649
Data columns (total 45 columns):
 #   Column                              Dtype  
---  ------                              -----  
 0   date_block_num                      int16  
 1   shop_id                             int64  
 2   item_id                             int64  
 3   item_cnt_month                      float16
 4   item_cnt_month_lag_1                float16
 5   item_cnt_month_lag_2                float16
 6   item_cnt_month_lag_3                float16
 7   item_cnt_month_lag_4                float16
 8   item_cnt_month_lag_5                float16
 9   item_cnt_month_lag_6                float16
 10  item_cnt_month_lag_7                float16
 11  item_cnt_month_lag_8                float16
 12  item_cnt_month_lag_9                float16
 13  item_cnt_month_lag_10               float16
 14  date_avg_item_cnt_lag_1             float16
 15  date_item_avg_item_cnt_lag_1        float16
 16  date_item_avg_item_cnt_lag_2        float16
 17  date_item_avg_item_cnt_lag_3        float16
 18  date_item_avg_item_cnt_lag_4        float16
 19  date_item_avg_item_cnt_lag_5        float16
 20  date_item_avg_item_cnt_lag_6        float16
 21  date_item_avg_item_cnt_lag_7        float16
 22  date_item_avg_item_cnt_lag_8        float16
 23  date_item_avg_item_cnt_lag_9        float16
 24  date_item_avg_item_cnt_lag_10       float16
 25  date_shop_avg_item_cnt_lag_1        float16
 26  date_shop_avg_item_cnt_lag_2        float16
 27  date_shop_avg_item_cnt_lag_3        float16
 28  date_shop_avg_item_cnt_lag_4        float16
 29  date_shop_avg_item_cnt_lag_5        float16
 30  date_shop_avg_item_cnt_lag_6        float16
 31  date_shop_avg_item_cnt_lag_7        float16
 32  date_shop_avg_item_cnt_lag_8        float16
 33  date_shop_avg_item_cnt_lag_9        float16
 34  date_shop_avg_item_cnt_lag_10       float16
 35  date_shop_item_avg_item_cnt_lag_1   float16
 36  date_shop_item_avg_item_cnt_lag_2   float16
 37  date_shop_item_avg_item_cnt_lag_3   float16
 38  date_shop_item_avg_item_cnt_lag_4   float16
 39  date_shop_item_avg_item_cnt_lag_5   float16
 40  date_shop_item_avg_item_cnt_lag_6   float16
 41  date_shop_item_avg_item_cnt_lag_7   float16
 42  date_shop_item_avg_item_cnt_lag_8   float16
 43  date_shop_item_avg_item_cnt_lag_9   float16
 44  date_shop_item_avg_item_cnt_lag_10  float16

-----------------------------------------------------------------------------------------------------------------------------------------------

SCRIPT: feature_eng_3.py

Creates 3 broader category and shop location focused lag features for the data:
LAG on sales of broader category sales per SHOP              'date_item_city_avg_item_cnt' 
LAG on sales of by month per SHOP location (city)            'date_city_avg_item_cnt'	
LAG on sales of each item by month per SHOP location (city)  'date_shop_subtype_avg_item_cnt'

Adds 2 first sale focused features
	"item_shop_first_sale"
	"item_first_sale"


	FILES IN: 
		'main_data_feature_eng_1.pickle'
		'categories_preprocessed_0.pickle'
		'shops_preprocessed_0.pickle'
		'items_preprocessed_0.pickle'

	FILES OUT: 
		'main_data_feature_eng_3.pickle'


#############################
#    DETAILS ABOUT OUTPUTS  #
#############################

MAIN TRAIN DATA 	'main_data_feature_eng_3.pickle'
Int64Index: 10925650 entries, 0 to 10925649
Data columns (total 15 columns):
 #   Column                                Dtype  
---  ------                                -----  
 0   date_block_num                        int16  
 1   shop_id                               int64  
 2   item_id                               int64  
 3   item_cnt_month                        float16
 4   item_category_id                      float64
 5   item_broader_category_id              float64
 6   item_general_category_id              float64
 7   shop_category_id                      int64  
 8   shop_location_id                      int64  
 9   date_shop_subtype_avg_item_cnt_lag_1  float16
 10  date_city_avg_item_cnt_lag_1          float16
 11  date_item_city_avg_item_cnt_lag_1     float16
 12  month                                 int16  
 13  item_shop_first_sale                  int16  
 14  item_first_sale                       int16  

-----------------------------------------------------------------------------------------------------------------------------------------------